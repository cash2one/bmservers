// Code generated by protoc-gen-go.
// source: LSControlProto.proto
// DO NOT EDIT!

/*
Package LSControlProto is a generated protocol buffer package.

It is generated from these files:
	LSControlProto.proto

It has these top-level messages:
	LSCHead
	LSCCtrlVerifyReq
	LSCCtrlVerifyAck
	LSCRegistAccountReq
	LSCRegistAccountAck
	LSCRemoveAccountReq
	LSCRemoveAccountAck
	RSRegistAccountReq
	RSRegistAccountAck
	RSHeartBeat
	RSModifyPasswordReq
	RSModifyPasswordRsp
	RSInsertDonateInfoReq
	RSInsertDonateInfoRsp
	RSInsertSystemGiftReq
	RSInsertSystemGiftRsp
*/
package LSControlProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Opcode int32

const (
	Opcode_PKG_NONE                     Opcode = 0
	Opcode_PKG_CtrlVerifyReq            Opcode = 1
	Opcode_PKG_CtrlVerifyAck            Opcode = 2
	Opcode_PKG_RegistAccountReq         Opcode = 3
	Opcode_PKG_RegistAccountAck         Opcode = 4
	Opcode_PKG_RemoveAccountReq         Opcode = 5
	Opcode_PKG_RemoveAccountAck         Opcode = 6
	Opcode_PKG_RegistAccountWithInfoReq Opcode = 7
	Opcode_PKG_RegistAccountWithInfoAck Opcode = 8
	Opcode_PKG_HeartBeat                Opcode = 9
	Opcode_PKG_ModifyPasswordReq        Opcode = 10
	Opcode_PKG_ModifyPasswordRsp        Opcode = 11
	Opcode_PKG_InsertDonateRecordReq    Opcode = 12
	Opcode_PKG_InsertDonateRecordRsp    Opcode = 13
	Opcode_PKG_InsertSystemGiftReq      Opcode = 14
	Opcode_PKG_InsertSystemGiftRsp      Opcode = 15
)

var Opcode_name = map[int32]string{
	0:  "PKG_NONE",
	1:  "PKG_CtrlVerifyReq",
	2:  "PKG_CtrlVerifyAck",
	3:  "PKG_RegistAccountReq",
	4:  "PKG_RegistAccountAck",
	5:  "PKG_RemoveAccountReq",
	6:  "PKG_RemoveAccountAck",
	7:  "PKG_RegistAccountWithInfoReq",
	8:  "PKG_RegistAccountWithInfoAck",
	9:  "PKG_HeartBeat",
	10: "PKG_ModifyPasswordReq",
	11: "PKG_ModifyPasswordRsp",
	12: "PKG_InsertDonateRecordReq",
	13: "PKG_InsertDonateRecordRsp",
	14: "PKG_InsertSystemGiftReq",
	15: "PKG_InsertSystemGiftRsp",
}
var Opcode_value = map[string]int32{
	"PKG_NONE":                     0,
	"PKG_CtrlVerifyReq":            1,
	"PKG_CtrlVerifyAck":            2,
	"PKG_RegistAccountReq":         3,
	"PKG_RegistAccountAck":         4,
	"PKG_RemoveAccountReq":         5,
	"PKG_RemoveAccountAck":         6,
	"PKG_RegistAccountWithInfoReq": 7,
	"PKG_RegistAccountWithInfoAck": 8,
	"PKG_HeartBeat":                9,
	"PKG_ModifyPasswordReq":        10,
	"PKG_ModifyPasswordRsp":        11,
	"PKG_InsertDonateRecordReq":    12,
	"PKG_InsertDonateRecordRsp":    13,
	"PKG_InsertSystemGiftReq":      14,
	"PKG_InsertSystemGiftRsp":      15,
}

func (x Opcode) Enum() *Opcode {
	p := new(Opcode)
	*p = x
	return p
}
func (x Opcode) String() string {
	return proto.EnumName(Opcode_name, int32(x))
}
func (x *Opcode) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Opcode_value, data, "Opcode")
	if err != nil {
		return err
	}
	*x = Opcode(value)
	return nil
}
func (Opcode) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type LSCHead struct {
	Opcode           *uint32 `protobuf:"varint,1,req,name=opcode" json:"opcode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LSCHead) Reset()                    { *m = LSCHead{} }
func (m *LSCHead) String() string            { return proto.CompactTextString(m) }
func (*LSCHead) ProtoMessage()               {}
func (*LSCHead) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LSCHead) GetOpcode() uint32 {
	if m != nil && m.Opcode != nil {
		return *m.Opcode
	}
	return 0
}

type LSCCtrlVerifyReq struct {
	Verifycode       *string `protobuf:"bytes,1,req,name=verifycode" json:"verifycode,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LSCCtrlVerifyReq) Reset()                    { *m = LSCCtrlVerifyReq{} }
func (m *LSCCtrlVerifyReq) String() string            { return proto.CompactTextString(m) }
func (*LSCCtrlVerifyReq) ProtoMessage()               {}
func (*LSCCtrlVerifyReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LSCCtrlVerifyReq) GetVerifycode() string {
	if m != nil && m.Verifycode != nil {
		return *m.Verifycode
	}
	return ""
}

type LSCCtrlVerifyAck struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LSCCtrlVerifyAck) Reset()                    { *m = LSCCtrlVerifyAck{} }
func (m *LSCCtrlVerifyAck) String() string            { return proto.CompactTextString(m) }
func (*LSCCtrlVerifyAck) ProtoMessage()               {}
func (*LSCCtrlVerifyAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *LSCCtrlVerifyAck) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type LSCRegistAccountReq struct {
	Account          *string `protobuf:"bytes,1,req,name=account" json:"account,omitempty"`
	Password         *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LSCRegistAccountReq) Reset()                    { *m = LSCRegistAccountReq{} }
func (m *LSCRegistAccountReq) String() string            { return proto.CompactTextString(m) }
func (*LSCRegistAccountReq) ProtoMessage()               {}
func (*LSCRegistAccountReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LSCRegistAccountReq) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *LSCRegistAccountReq) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type LSCRegistAccountAck struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LSCRegistAccountAck) Reset()                    { *m = LSCRegistAccountAck{} }
func (m *LSCRegistAccountAck) String() string            { return proto.CompactTextString(m) }
func (*LSCRegistAccountAck) ProtoMessage()               {}
func (*LSCRegistAccountAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *LSCRegistAccountAck) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type LSCRemoveAccountReq struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *LSCRemoveAccountReq) Reset()                    { *m = LSCRemoveAccountReq{} }
func (m *LSCRemoveAccountReq) String() string            { return proto.CompactTextString(m) }
func (*LSCRemoveAccountReq) ProtoMessage()               {}
func (*LSCRemoveAccountReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *LSCRemoveAccountReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type LSCRemoveAccountAck struct {
	Result           *bool  `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *LSCRemoveAccountAck) Reset()                    { *m = LSCRemoveAccountAck{} }
func (m *LSCRemoveAccountAck) String() string            { return proto.CompactTextString(m) }
func (*LSCRemoveAccountAck) ProtoMessage()               {}
func (*LSCRemoveAccountAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *LSCRemoveAccountAck) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

type RSRegistAccountReq struct {
	Account          *string `protobuf:"bytes,1,req,name=account" json:"account,omitempty"`
	Password         *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	Mail             *string `protobuf:"bytes,3,req,name=mail" json:"mail,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RSRegistAccountReq) Reset()                    { *m = RSRegistAccountReq{} }
func (m *RSRegistAccountReq) String() string            { return proto.CompactTextString(m) }
func (*RSRegistAccountReq) ProtoMessage()               {}
func (*RSRegistAccountReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RSRegistAccountReq) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *RSRegistAccountReq) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *RSRegistAccountReq) GetMail() string {
	if m != nil && m.Mail != nil {
		return *m.Mail
	}
	return ""
}

type RSRegistAccountAck struct {
	Result           *bool   `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Mail             *string `protobuf:"bytes,2,req,name=mail" json:"mail,omitempty"`
	Account          *string `protobuf:"bytes,3,req,name=account" json:"account,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RSRegistAccountAck) Reset()                    { *m = RSRegistAccountAck{} }
func (m *RSRegistAccountAck) String() string            { return proto.CompactTextString(m) }
func (*RSRegistAccountAck) ProtoMessage()               {}
func (*RSRegistAccountAck) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *RSRegistAccountAck) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *RSRegistAccountAck) GetMail() string {
	if m != nil && m.Mail != nil {
		return *m.Mail
	}
	return ""
}

func (m *RSRegistAccountAck) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

type RSHeartBeat struct {
	Seq              *uint32 `protobuf:"varint,1,req,name=seq" json:"seq,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RSHeartBeat) Reset()                    { *m = RSHeartBeat{} }
func (m *RSHeartBeat) String() string            { return proto.CompactTextString(m) }
func (*RSHeartBeat) ProtoMessage()               {}
func (*RSHeartBeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *RSHeartBeat) GetSeq() uint32 {
	if m != nil && m.Seq != nil {
		return *m.Seq
	}
	return 0
}

type RSModifyPasswordReq struct {
	Account          *string `protobuf:"bytes,1,req,name=account" json:"account,omitempty"`
	Password         *string `protobuf:"bytes,2,req,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RSModifyPasswordReq) Reset()                    { *m = RSModifyPasswordReq{} }
func (m *RSModifyPasswordReq) String() string            { return proto.CompactTextString(m) }
func (*RSModifyPasswordReq) ProtoMessage()               {}
func (*RSModifyPasswordReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *RSModifyPasswordReq) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *RSModifyPasswordReq) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

type RSModifyPasswordRsp struct {
	Result           *bool   `protobuf:"varint,1,req,name=result" json:"result,omitempty"`
	Account          *string `protobuf:"bytes,2,req,name=account" json:"account,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RSModifyPasswordRsp) Reset()                    { *m = RSModifyPasswordRsp{} }
func (m *RSModifyPasswordRsp) String() string            { return proto.CompactTextString(m) }
func (*RSModifyPasswordRsp) ProtoMessage()               {}
func (*RSModifyPasswordRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *RSModifyPasswordRsp) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

func (m *RSModifyPasswordRsp) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

type RSInsertDonateInfoReq struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Donate           *int32  `protobuf:"varint,2,req,name=donate" json:"donate,omitempty"`
	Donateorderid    *string `protobuf:"bytes,3,req,name=donateorderid" json:"donateorderid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RSInsertDonateInfoReq) Reset()                    { *m = RSInsertDonateInfoReq{} }
func (m *RSInsertDonateInfoReq) String() string            { return proto.CompactTextString(m) }
func (*RSInsertDonateInfoReq) ProtoMessage()               {}
func (*RSInsertDonateInfoReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *RSInsertDonateInfoReq) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RSInsertDonateInfoReq) GetDonate() int32 {
	if m != nil && m.Donate != nil {
		return *m.Donate
	}
	return 0
}

func (m *RSInsertDonateInfoReq) GetDonateorderid() string {
	if m != nil && m.Donateorderid != nil {
		return *m.Donateorderid
	}
	return ""
}

type RSInsertDonateInfoRsp struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Result           *int32  `protobuf:"varint,2,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RSInsertDonateInfoRsp) Reset()                    { *m = RSInsertDonateInfoRsp{} }
func (m *RSInsertDonateInfoRsp) String() string            { return proto.CompactTextString(m) }
func (*RSInsertDonateInfoRsp) ProtoMessage()               {}
func (*RSInsertDonateInfoRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RSInsertDonateInfoRsp) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *RSInsertDonateInfoRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

type RSInsertSystemGiftReq struct {
	Account          *string `protobuf:"bytes,1,req,name=account" json:"account,omitempty"`
	Giftid           *int32  `protobuf:"varint,2,req,name=giftid" json:"giftid,omitempty"`
	Giftsum          *int32  `protobuf:"varint,3,req,name=giftsum" json:"giftsum,omitempty"`
	Expiretime       *int32  `protobuf:"varint,4,req,name=expiretime" json:"expiretime,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RSInsertSystemGiftReq) Reset()                    { *m = RSInsertSystemGiftReq{} }
func (m *RSInsertSystemGiftReq) String() string            { return proto.CompactTextString(m) }
func (*RSInsertSystemGiftReq) ProtoMessage()               {}
func (*RSInsertSystemGiftReq) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RSInsertSystemGiftReq) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *RSInsertSystemGiftReq) GetGiftid() int32 {
	if m != nil && m.Giftid != nil {
		return *m.Giftid
	}
	return 0
}

func (m *RSInsertSystemGiftReq) GetGiftsum() int32 {
	if m != nil && m.Giftsum != nil {
		return *m.Giftsum
	}
	return 0
}

func (m *RSInsertSystemGiftReq) GetExpiretime() int32 {
	if m != nil && m.Expiretime != nil {
		return *m.Expiretime
	}
	return 0
}

type RSInsertSystemGiftRsp struct {
	Account          *string `protobuf:"bytes,1,req,name=account" json:"account,omitempty"`
	Result           *int32  `protobuf:"varint,2,req,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *RSInsertSystemGiftRsp) Reset()                    { *m = RSInsertSystemGiftRsp{} }
func (m *RSInsertSystemGiftRsp) String() string            { return proto.CompactTextString(m) }
func (*RSInsertSystemGiftRsp) ProtoMessage()               {}
func (*RSInsertSystemGiftRsp) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *RSInsertSystemGiftRsp) GetAccount() string {
	if m != nil && m.Account != nil {
		return *m.Account
	}
	return ""
}

func (m *RSInsertSystemGiftRsp) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*LSCHead)(nil), "LSControlProto.LSCHead")
	proto.RegisterType((*LSCCtrlVerifyReq)(nil), "LSControlProto.LSCCtrlVerifyReq")
	proto.RegisterType((*LSCCtrlVerifyAck)(nil), "LSControlProto.LSCCtrlVerifyAck")
	proto.RegisterType((*LSCRegistAccountReq)(nil), "LSControlProto.LSCRegistAccountReq")
	proto.RegisterType((*LSCRegistAccountAck)(nil), "LSControlProto.LSCRegistAccountAck")
	proto.RegisterType((*LSCRemoveAccountReq)(nil), "LSControlProto.LSCRemoveAccountReq")
	proto.RegisterType((*LSCRemoveAccountAck)(nil), "LSControlProto.LSCRemoveAccountAck")
	proto.RegisterType((*RSRegistAccountReq)(nil), "LSControlProto.RSRegistAccountReq")
	proto.RegisterType((*RSRegistAccountAck)(nil), "LSControlProto.RSRegistAccountAck")
	proto.RegisterType((*RSHeartBeat)(nil), "LSControlProto.RSHeartBeat")
	proto.RegisterType((*RSModifyPasswordReq)(nil), "LSControlProto.RSModifyPasswordReq")
	proto.RegisterType((*RSModifyPasswordRsp)(nil), "LSControlProto.RSModifyPasswordRsp")
	proto.RegisterType((*RSInsertDonateInfoReq)(nil), "LSControlProto.RSInsertDonateInfoReq")
	proto.RegisterType((*RSInsertDonateInfoRsp)(nil), "LSControlProto.RSInsertDonateInfoRsp")
	proto.RegisterType((*RSInsertSystemGiftReq)(nil), "LSControlProto.RSInsertSystemGiftReq")
	proto.RegisterType((*RSInsertSystemGiftRsp)(nil), "LSControlProto.RSInsertSystemGiftRsp")
	proto.RegisterEnum("LSControlProto.Opcode", Opcode_name, Opcode_value)
}

func init() { proto.RegisterFile("LSControlProto.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 506 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x53, 0x5d, 0x6f, 0xd3, 0x30,
	0x14, 0x65, 0xfd, 0xde, 0xed, 0xda, 0x79, 0x66, 0x15, 0x2d, 0x1f, 0xd2, 0x14, 0x34, 0x84, 0x78,
	0xe0, 0x0d, 0xb4, 0xd7, 0x51, 0xa6, 0x31, 0x31, 0xb6, 0x2a, 0x91, 0xe0, 0x09, 0xa1, 0x28, 0x71,
	0x47, 0x44, 0x13, 0x67, 0xb6, 0x3b, 0xd8, 0xcf, 0xe2, 0x1f, 0x72, 0xed, 0x84, 0x36, 0x99, 0xbd,
	0x0a, 0xf1, 0x12, 0xe9, 0xde, 0x73, 0xcf, 0xb9, 0xc7, 0xf6, 0x09, 0xec, 0x9f, 0x07, 0x53, 0x9e,
	0x29, 0xc1, 0x17, 0x33, 0xc1, 0x15, 0x7f, 0x9d, 0xeb, 0x2f, 0x1d, 0xd6, 0xbb, 0xde, 0x04, 0xba,
	0xd8, 0xf9, 0xc0, 0xc2, 0x98, 0x0e, 0xa1, 0xc3, 0xf3, 0x88, 0xc7, 0x6c, 0xbc, 0x75, 0xd0, 0x78,
	0x39, 0xf0, 0x5e, 0x00, 0x41, 0x68, 0xaa, 0xc4, 0xe2, 0x33, 0x13, 0xc9, 0xfc, 0xd6, 0x67, 0xd7,
	0x94, 0x02, 0xdc, 0x98, 0x62, 0x35, 0xb7, 0xed, 0x79, 0x77, 0xe6, 0x8e, 0xa3, 0x1f, 0x5a, 0x4b,
	0x30, 0xb9, 0x5c, 0x28, 0x33, 0xd3, 0xf3, 0x8e, 0xe0, 0x21, 0xce, 0xf8, 0xec, 0x2a, 0x91, 0xea,
	0x38, 0x8a, 0xf8, 0x32, 0x53, 0x5a, 0x6e, 0x17, 0xba, 0x61, 0x51, 0x15, 0x5a, 0x94, 0x40, 0x2f,
	0x0f, 0xa5, 0xfc, 0xc9, 0x45, 0x3c, 0x6e, 0x18, 0xf5, 0x43, 0x9b, 0xe9, 0x5a, 0xf0, 0xbc, 0x1c,
	0x4b, 0xf9, 0x0d, 0xab, 0x2c, 0xd8, 0x81, 0x56, 0x16, 0xa6, 0x7f, 0x9d, 0x1e, 0xda, 0x43, 0x2e,
	0xad, 0x13, 0xa0, 0x7e, 0xf0, 0x1f, 0x5e, 0xf5, 0xb6, 0x34, 0x4c, 0x16, 0xe3, 0xa6, 0xd9, 0x36,
	0xb5, 0x64, 0x1c, 0xcb, 0x56, 0x9c, 0x42, 0xa1, 0xb2, 0xa4, 0x10, 0x79, 0x0c, 0x7d, 0x3f, 0xc0,
	0xe7, 0x11, 0xea, 0x1d, 0x0b, 0x15, 0xed, 0x43, 0x53, 0xb2, 0xeb, 0xf2, 0x81, 0xf0, 0x52, 0xfd,
	0xe0, 0x13, 0x8f, 0xf1, 0xce, 0x67, 0xa5, 0x91, 0x7f, 0xbc, 0xd4, 0xb7, 0x0e, 0xa6, 0xcc, 0x2d,
	0x6f, 0x15, 0xa5, 0x82, 0x77, 0x0e, 0x23, 0x3f, 0x38, 0xcb, 0x24, 0x13, 0xea, 0x3d, 0xcf, 0x42,
	0xc5, 0xce, 0xb2, 0x39, 0xb7, 0xee, 0x59, 0xeb, 0xc4, 0x06, 0x36, 0xb4, 0x36, 0x1d, 0xc1, 0xa0,
	0xa8, 0x71, 0x0f, 0x46, 0x24, 0x2e, 0xcf, 0xf6, 0xc6, 0xa9, 0x86, 0x3e, 0x2c, 0xb5, 0xd2, 0x95,
	0x51, 0xf3, 0xbe, 0xae, 0x69, 0xc1, 0xad, 0x54, 0x2c, 0x3d, 0x4d, 0xe6, 0xee, 0x17, 0x42, 0xe6,
	0x15, 0x62, 0x49, 0x5c, 0xfa, 0xc0, 0x01, 0x5d, 0xcb, 0x65, 0x6a, 0x1c, 0xb4, 0x75, 0x9c, 0xd9,
	0xaf, 0x3c, 0x11, 0x4c, 0x25, 0xb8, 0xae, 0x65, 0xe4, 0x8f, 0x9c, 0xf2, 0xe8, 0xca, 0x25, 0x5f,
	0x35, 0xf6, 0xea, 0x77, 0x13, 0x3a, 0x97, 0xe6, 0x0f, 0xc2, 0x13, 0xf4, 0x66, 0x1f, 0x4f, 0xbf,
	0x5d, 0x5c, 0x5e, 0x9c, 0x90, 0x07, 0x78, 0xfe, 0x3d, 0x5d, 0xd5, 0x7e, 0x25, 0xb2, 0x65, 0xb7,
	0x31, 0x1f, 0xa4, 0x41, 0xc7, 0xb0, 0xaf, 0xdb, 0x77, 0x03, 0x48, 0x9a, 0x4e, 0x44, 0x73, 0x5a,
	0x6b, 0xa4, 0x9e, 0x7f, 0xd2, 0x76, 0x22, 0x9a, 0xd3, 0xa1, 0x07, 0xf0, 0xd4, 0x52, 0xfb, 0x92,
	0xa8, 0xef, 0xe5, 0x9b, 0x92, 0xee, 0xc6, 0x09, 0xad, 0xd1, 0xa3, 0x7b, 0x30, 0xd0, 0x13, 0xab,
	0x80, 0x92, 0x6d, 0x3a, 0x81, 0x91, 0x6e, 0x59, 0xb9, 0x24, 0x70, 0x0f, 0x24, 0x73, 0xd2, 0xa7,
	0xcf, 0x60, 0xa2, 0xa1, 0x6a, 0x1a, 0x7c, 0x16, 0x95, 0xcc, 0x9d, 0x0d, 0x30, 0xb2, 0x07, 0xf4,
	0x09, 0x3c, 0x5a, 0xc3, 0xb5, 0x50, 0x90, 0xe1, 0xbd, 0x20, 0x32, 0x77, 0xff, 0x04, 0x00, 0x00,
	0xff, 0xff, 0xbd, 0xef, 0xe2, 0xdc, 0x26, 0x05, 0x00, 0x00,
}
